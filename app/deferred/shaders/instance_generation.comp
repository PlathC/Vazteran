#version 450

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform UniformBuffer
{
    uint uInstanceCount;
} uniforms;

layout(set = 0, binding = 1) buffer OutputBuffer
{
    vec4 values[];
} instances;

void main(void)
{
    if(gl_LocalInvocationIndex >= uniforms.uInstanceCount)
        return;

    const int id    = int(gl_LocalInvocationIndex);
    const int range = int(sqrt(float(uniforms.uInstanceCount)));
    const int x     = id % range - range / 2;
    const int z     = id / range - range / 2;
    instances.values[gl_LocalInvocationIndex] = vec4(x, 0., z, 1.) * 2;
}
